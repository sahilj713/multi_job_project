pipeline {
 agent any
 environment {
 AWS_ACCOUNT_ID="192182953222"
 AWS_DEFAULT_REGION="us-east-1" 
 IMAGE_REPO_NAME="jenkins-pipeline-build-demo"
 PARAM_IMAGE_TAG ="${IMAGE_TAG}"
 GIT_IMAGE_TAG="${GIT_COMMIT}" 
 SELECTED_IMAGE_TAG = ""
 REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
 CLUSTER_NAME = "ecs-cluster"
 TASKDEF_NAME = "ecs_terraform_task_def" 
 SERVICE_NAME = "ecs_terraform_service"  
 }
 
 
 stages {
  
//   stage('git'){
//   steps {
//    git branch: '${BRANCH_NAME}',
//                 credentialsId: '8132b76c-71a6-4f19-a91f-a2907ec94321',
//                 url: 'git@github.com:sahilj713/jenkins_build_with_param.git'
//   }
//   }
  
  stage('image_tag_selection'){
  steps {
   script{
    if (env.PARAM_IMAGE_TAG == ''){
     SELECTED_IMAGE_TAG ="${GIT_IMAGE_TAG}" 
    }else{
     SELECTED_IMAGE_TAG ="${PARAM_IMAGE_TAG}"
    }
   }
   } 
  } 
  
 stage('Logging into AWS ECR') {
 steps {
 script {
 sh "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
 }
 
 }
 }
 
 stage('Cloning Git') {
 steps {
//  checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '', url: 'https://github.com/sd031/aws_codebuild_codedeploy_nodeJs_demo.git']]])
//   checkout scmGit(branches: [[name: '*/${BRANCH_NAME}']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/sahilj713/jenkins_build_with_param.git']])
//   checkout scmGit(branches: [[name: '*/${BRANCH_NAME}']], extensions: [], userRemoteConfigs: [[credentialsId: '8132b76c-71a6-4f19-a91f-a2907ec94321', url: 'git@github.com:sahilj713/jenkins_build_with_param.git']])
//   checkout scmGit(branches: [[name: '*/${BRANCH_NAME}']], extensions: [], userRemoteConfigs: [[credentialsId: 'access-credentials', url: 'https://github.com/sahilj713/jenkins_build_with_param.git']])
 checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/sahilj713/multi_job_project.git']]) 
 }
 }
 
 // Building Docker images
 stage('Building image') {
 steps{
 script {
 dockerImage = docker.build "${IMAGE_REPO_NAME}:${SELECTED_IMAGE_TAG}"  
 }
 }
 }
 
 // Uploading Docker images into AWS ECR
 stage('Pushing to ECR') {
 steps{ 
 script {
 sh "docker tag ${IMAGE_REPO_NAME}:${SELECTED_IMAGE_TAG} ${REPOSITORY_URI}:$SELECTED_IMAGE_TAG"
 sh "docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${SELECTED_IMAGE_TAG}"
 }
 }
 }
 
 }
 }
