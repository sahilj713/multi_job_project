pipeline {
 agent any
 environment {
 AWS_ACCOUNT_ID="192182953222"
 AWS_DEFAULT_REGION="us-east-1" 
 IMAGE_REPO_NAME="jenkins-pipeline-build-demo"
// PARAM_IMAGE_TAG ="${IMAGE_TAG}"
 IMAGE_TAG="${GIT_COMMIT}" 
// SELECTED_IMAGE_TAG = ""
 REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
 CLUSTER_NAME = "ecs-cluster"
 TASKDEF_NAME = "ecs_terraform_task_def" 
 SERVICE_NAME = "ecs_terraform_service"  
 }
 
 
 stages {
 stage('deploy to ecs') {
  steps{
  echo 'Deploying...'
        input message: 'Do you want to deploy to production? (y/n)'
  script {
  sh "aws ecs describe-task-definition --task-definition ${ TASKDEF_NAME } > task-def.json"
  sh "jq .taskDefinition task-def.json > taskdefinition.json"
  sh "jq 'del(.taskDefinitionArn)' taskdefinition.json | jq 'del(.revision)' | jq 'del(.status)' | jq 'del(.requiresAttributes)' | jq 'del(.compatibilities)' | jq 'del(.registeredAt)'| jq 'del(.registeredBy)' > container-definition.json"
  sh "jq '.containerDefinitions[0].image = \"${REPOSITORY_URI}:${IMAGE_TAG}\"' container-definition.json > temp-taskdef.json"  
  sh "aws ecs register-task-definition --cli-input-json file://container-definition.json"  
  sh "aws ecs update-service --cluster  ${ CLUSTER_NAME } --service  ${ SERVICE_NAME } --task-definition  ${ TASKDEF_NAME }"
    }
   }
  } 
 }
}
